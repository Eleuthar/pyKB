python manage.py shell
\\ Start python shell to run SQL queries 


python manage.py makemigrations 
\\ Initialize 000#_initial_py
	
	
python manage.py sqlmigrate blog 000x
\\ Prints SQL code that is going to run on our behalf 


python manage.py migrate 
\\ Deploy database changes 



Django ORM example for Post and User
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

from blog.models import Post 
from django.contrib.auth.models import User 


User.objects.<method/property>() 


user = User.objects.filter(username='eleuthar').first()  


user.id == user.pk == User.objects.get(id=1) 


Post.objects.all() will return QuerySet[] due to no posts.  


post_1 = Post(title='Blog #x', content='First post content', author=user)  


post_1.save() 
\\ now Post.objects.all() will return [<Post: Post object (#)>] 


def __str__(self): 
	return self.title 
\\ will allow instantiation of the post for a detailed query 


post = Post.objects.first() 

post.content  
\\ will return the content field of the instantiated post; can also return author related data due to inheritance


user.post_set.all() 
\\ returns all posts written by a user 


user.post_set.create(title='title  name', content='some content') 
\\ create a new post using the class constructor properties 
\\ Model classes can be imported in views.py then passed to the view function's dictionary context.
