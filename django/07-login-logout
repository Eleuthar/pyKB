####### PROJECT\URLS.PY #######


from django.contrib.auth import views as auth_views

urlpatterns = [
	path('login/', auth_views.LoginView.as_view(template_name='users/login.html'), name='login'),
	path('logout/', auth_views.LogoutView.as_view(template_name='users/logout.html'), name='logout'),
	path('profile/', user_views.profile, name='profile'),
]


<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



####### USERS\VIEWS.PY #######


django.contrib.auth.decorators import login_required

@login_required
def profile(request):
	return render(request, 'users/profile.html')



<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



####### PROJECT\SETTINGS.PY #######


\\ on valid user login, DJANGO redirects by default to ~\accounts\profile
\\ a good practice is to set redirection to homepage after login
LOGIN_REDIRECT_URL = 'blog-home'

\\ reloading the login page while not logged in, django looks for default login routes in ~\accounts\login
\\ set the login route to current 'login' urlpattern name 
LOGIN_URL = 'login'



<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



####### BLOG\TEMPLATES\BLOG\BASE.HTML #######


\\ conditionally display 'LOG IN' or 'LOG OUT' nav links via user variable attribute "is_authenticated"

{% if user.is_authenticated %}
	<a class="nav-item nav-link" href="{% url 'profile' %}">Profile</a>
	<a class="nav-item nav-link" href="{% url 'logout' %}">Log out</a>
{% else %}
	<a class="nav-item nav-link" href="{% url 'login' %}">Login</a>
        <a class="nav-item nav-link" href="{% url 'register' %}">Register</a>
{% endif %}
